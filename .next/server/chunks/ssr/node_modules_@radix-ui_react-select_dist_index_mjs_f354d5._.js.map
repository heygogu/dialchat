{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@radix-ui/react-select/dist/packages/react/select/src/index.ts","/turbopack/[project]/node_modules/@radix-ui/react-select/dist/packages/react/select/src/Select.tsx"],"sourcesContent":["export {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n} from './Select';\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n} from './Select';\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Slot } from '@radix-ui/react-slot';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { usePrevious } from '@radix-ui/react-use-previous';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\nimport { hideOthers } from 'aria-hidden';\nimport { RemoveScroll } from 'react-remove-scroll';\n\nimport type * as Radix from '@radix-ui/react-primitive';\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\n\nconst OPEN_KEYS = [' ', 'Enter', 'ArrowUp', 'ArrowDown'];\nconst SELECTION_KEYS = [' ', 'Enter'];\n\n/* -------------------------------------------------------------------------------------------------\n * Select\n * -----------------------------------------------------------------------------------------------*/\n\nconst SELECT_NAME = 'Select';\n\ntype ItemData = { value: string; disabled: boolean; textValue: string };\nconst [Collection, useCollection, createCollectionScope] = createCollection<\n  SelectItemElement,\n  ItemData\n>(SELECT_NAME);\n\ntype ScopedProps<P> = P & { __scopeSelect?: Scope };\nconst [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\ntype SelectContextValue = {\n  trigger: SelectTriggerElement | null;\n  onTriggerChange(node: SelectTriggerElement | null): void;\n  valueNode: SelectValueElement | null;\n  onValueNodeChange(node: SelectValueElement): void;\n  valueNodeHasChildren: boolean;\n  onValueNodeHasChildrenChange(hasChildren: boolean): void;\n  contentId: string;\n  value?: string;\n  onValueChange(value: string): void;\n  open: boolean;\n  required?: boolean;\n  onOpenChange(open: boolean): void;\n  dir: SelectProps['dir'];\n  triggerPointerDownPosRef: React.MutableRefObject<{ x: number; y: number } | null>;\n  disabled?: boolean;\n};\n\nconst [SelectProvider, useSelectContext] = createSelectContext<SelectContextValue>(SELECT_NAME);\n\ntype NativeOption = React.ReactElement<React.ComponentProps<'option'>>;\n\ntype SelectNativeOptionsContextValue = {\n  onNativeOptionAdd(option: NativeOption): void;\n  onNativeOptionRemove(option: NativeOption): void;\n};\nconst [SelectNativeOptionsProvider, useSelectNativeOptionsContext] =\n  createSelectContext<SelectNativeOptionsContextValue>(SELECT_NAME);\n\ninterface SelectProps {\n  children?: React.ReactNode;\n  value?: string;\n  defaultValue?: string;\n  onValueChange?(value: string): void;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  dir?: Direction;\n  name?: string;\n  autoComplete?: string;\n  disabled?: boolean;\n  required?: boolean;\n}\n\nconst Select: React.FC<SelectProps> = (props: ScopedProps<SelectProps>) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState<SelectTriggerElement | null>(null);\n  const [valueNode, setValueNode] = React.useState<SelectValueElement | null>(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open = false, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen,\n    onChange: onOpenChange,\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n  });\n  const triggerPointerDownPosRef = React.useRef<{ x: number; y: number } | null>(null);\n\n  // We set this to true by default so that events bubble to forms without JS (SSR)\n  const isFormControl = trigger ? Boolean(trigger.closest('form')) : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(new Set<NativeOption>());\n\n  // The native `select` only associates the correct default value if the corresponding\n  // `option` is rendered as a child **at the same time** as itself.\n  // Because it might take a few renders for our items to gather the information to build\n  // the native `option`(s), we generate a key on the `select` to make sure React re-builds it\n  // each time the options change.\n  const nativeSelectKey = Array.from(nativeOptionsSet)\n    .map((option) => option.props.value)\n    .join(';');\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <SelectProvider\n        required={required}\n        scope={__scopeSelect}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        valueNode={valueNode}\n        onValueNodeChange={setValueNode}\n        valueNodeHasChildren={valueNodeHasChildren}\n        onValueNodeHasChildrenChange={setValueNodeHasChildren}\n        contentId={useId()}\n        value={value}\n        onValueChange={setValue}\n        open={open}\n        onOpenChange={setOpen}\n        dir={direction}\n        triggerPointerDownPosRef={triggerPointerDownPosRef}\n        disabled={disabled}\n      >\n        <Collection.Provider scope={__scopeSelect}>\n          <SelectNativeOptionsProvider\n            scope={props.__scopeSelect}\n            onNativeOptionAdd={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, [])}\n            onNativeOptionRemove={React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, [])}\n          >\n            {children}\n          </SelectNativeOptionsProvider>\n        </Collection.Provider>\n\n        {isFormControl ? (\n          <BubbleSelect\n            key={nativeSelectKey}\n            aria-hidden\n            required={required}\n            tabIndex={-1}\n            name={name}\n            autoComplete={autoComplete}\n            value={value}\n            // enable form autofill\n            onChange={(event) => setValue(event.target.value)}\n            disabled={disabled}\n          >\n            {value === undefined ? <option value=\"\" /> : null}\n            {Array.from(nativeOptionsSet)}\n          </BubbleSelect>\n        ) : null}\n      </SelectProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nSelect.displayName = SELECT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'SelectTrigger';\n\ntype SelectTriggerElement = React.ElementRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = Radix.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface SelectTriggerProps extends PrimitiveButtonProps {}\n\nconst SelectTrigger = React.forwardRef<SelectTriggerElement, SelectTriggerProps>(\n  (props: ScopedProps<SelectTriggerProps>, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== undefined) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n\n    const handleOpen = () => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        // reset typeahead when we open\n        resetTypeahead();\n      }\n    };\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          type=\"button\"\n          role=\"combobox\"\n          aria-controls={context.contentId}\n          aria-expanded={context.open}\n          aria-required={context.required}\n          aria-autocomplete=\"none\"\n          dir={context.dir}\n          data-state={context.open ? 'open' : 'closed'}\n          disabled={isDisabled}\n          data-disabled={isDisabled ? '' : undefined}\n          data-placeholder={context.value === undefined ? '' : undefined}\n          {...triggerProps}\n          ref={composedRefs}\n          // Enable compatibility with native label or custom `Label` \"click\" for Safari:\n          onClick={composeEventHandlers(triggerProps.onClick, (event) => {\n            // Whilst browsers generally have no issue focusing the trigger when clicking\n            // on a label, Safari seems to struggle with the fact that there's no `onClick`.\n            // We force `focus` in this case. Note: this doesn't create any other side-effect\n            // because we are preventing default in `onPointerDown` so effectively\n            // this only runs for a label \"click\"\n            event.currentTarget.focus();\n          })}\n          onPointerDown={composeEventHandlers(triggerProps.onPointerDown, (event) => {\n            // prevent implicit pointer capture\n            // https://www.w3.org/TR/pointerevents3/#implicit-pointer-capture\n            const target = event.target as HTMLElement;\n            if (target.hasPointerCapture(event.pointerId)) {\n              target.releasePointerCapture(event.pointerId);\n            }\n\n            // only call handler if it's the left button (mousedown gets triggered by all mouse buttons)\n            // but not when the control key is pressed (avoiding MacOS right click)\n            if (event.button === 0 && event.ctrlKey === false) {\n              handleOpen();\n              context.triggerPointerDownPosRef.current = {\n                x: Math.round(event.pageX),\n                y: Math.round(event.pageY),\n              };\n              // prevent trigger from stealing focus from the active item after opening.\n              event.preventDefault();\n            }\n          })}\n          onKeyDown={composeEventHandlers(triggerProps.onKeyDown, (event) => {\n            const isTypingAhead = searchRef.current !== '';\n            const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n            if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n            if (isTypingAhead && event.key === ' ') return;\n            if (OPEN_KEYS.includes(event.key)) {\n              handleOpen();\n              event.preventDefault();\n            }\n          })}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nSelectTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectValue\n * -----------------------------------------------------------------------------------------------*/\n\nconst VALUE_NAME = 'SelectValue';\n\ntype SelectValueElement = React.ElementRef<typeof Primitive.span>;\ntype PrimitiveSpanProps = Radix.ComponentPropsWithoutRef<typeof Primitive.span>;\ninterface SelectValueProps extends Omit<PrimitiveSpanProps, 'placeholder'> {\n  placeholder?: React.ReactNode;\n}\n\nconst SelectValue = React.forwardRef<SelectValueElement, SelectValueProps>(\n  (props: ScopedProps<SelectValueProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, children, placeholder, ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== undefined;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n\n    return (\n      <Primitive.span\n        {...valueProps}\n        ref={composedRefs}\n        // we don't want events from the portalled `SelectValue` children to bubble\n        // through the item they came from\n        style={{ pointerEvents: 'none' }}\n      >\n        {context.value === undefined && placeholder !== undefined ? placeholder : children}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectValue.displayName = VALUE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectIcon\n * -----------------------------------------------------------------------------------------------*/\n\nconst ICON_NAME = 'SelectIcon';\n\ntype SelectIconElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectIconProps extends PrimitiveSpanProps {}\n\nconst SelectIcon = React.forwardRef<SelectIconElement, SelectIconProps>(\n  (props: ScopedProps<SelectIconProps>, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return (\n      <Primitive.span aria-hidden {...iconProps} ref={forwardedRef}>\n        {children || '▼'}\n      </Primitive.span>\n    );\n  }\n);\n\nSelectIcon.displayName = ICON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'SelectPortal';\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface SelectPortalProps extends Omit<PortalProps, 'asChild'> {\n  children?: React.ReactNode;\n}\n\nconst SelectPortal: React.FC<SelectPortalProps> = (props: ScopedProps<SelectPortalProps>) => {\n  return <PortalPrimitive asChild {...props} />;\n};\n\nSelectPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'SelectContent';\n\ntype SelectContentElement = SelectContentImplElement;\ninterface SelectContentProps extends SelectContentImplProps {}\n\nconst SelectContent = React.forwardRef<SelectContentElement, SelectContentProps>(\n  (props: ScopedProps<SelectContentProps>, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState<DocumentFragment>();\n\n    // setting the fragment in `useLayoutEffect` as `DocumentFragment` doesn't exist on the server\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n\n    if (!context.open) {\n      const frag = fragment as Element | undefined;\n      return frag\n        ? ReactDOM.createPortal(\n            <SelectContentProvider scope={props.__scopeSelect}>\n              <Collection.Slot scope={props.__scopeSelect}>\n                <div>{props.children}</div>\n              </Collection.Slot>\n            </SelectContentProvider>,\n            frag\n          )\n        : null;\n    }\n\n    return <SelectContentImpl {...props} ref={forwardedRef} />;\n  }\n);\n\nSelectContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectContentImpl\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_MARGIN = 10;\n\ntype SelectContentContextValue = {\n  content?: SelectContentElement | null;\n  viewport?: SelectViewportElement | null;\n  onViewportChange?: (node: SelectViewportElement | null) => void;\n  itemRefCallback?: (node: SelectItemElement | null, value: string, disabled: boolean) => void;\n  selectedItem?: SelectItemElement | null;\n  onItemLeave?: () => void;\n  itemTextRefCallback?: (\n    node: SelectItemTextElement | null,\n    value: string,\n    disabled: boolean\n  ) => void;\n  focusSelectedItem?: () => void;\n  selectedItemText?: SelectItemTextElement | null;\n  position?: SelectContentProps['position'];\n  isPositioned?: boolean;\n  searchRef?: React.RefObject<string>;\n};\n\nconst [SelectContentProvider, useSelectContentContext] =\n  createSelectContext<SelectContentContextValue>(CONTENT_NAME);\n\nconst CONTENT_IMPL_NAME = 'SelectContentImpl';\n\ntype SelectContentImplElement = SelectPopperPositionElement | SelectItemAlignedPositionElement;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = Radix.ComponentPropsWithoutRef<typeof FocusScope>;\n\ntype SelectPopperPrivateProps = { onPlaced?: PopperContentProps['onPlaced'] };\n\ninterface SelectContentImplProps\n  extends Omit<SelectPopperPositionProps, keyof SelectPopperPrivateProps>,\n    Omit<SelectItemAlignedPositionProps, keyof SelectPopperPrivateProps> {\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n\n  position?: 'item-aligned' | 'popper';\n}\n\nconst SelectContentImpl = React.forwardRef<SelectContentImplElement, SelectContentImplProps>(\n  (props: ScopedProps<SelectContentImplProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = 'item-aligned',\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState<SelectContentImplElement | null>(null);\n    const [viewport, setViewport] = React.useState<SelectViewportElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState<SelectItemElement | null>(null);\n    const [selectedItemText, setSelectedItemText] = React.useState<SelectItemTextElement | null>(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n\n    // Make sure the whole tree has focus guards as our `Select` may be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    const focusFirst = React.useCallback(\n      (candidates: Array<HTMLElement | null>) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          // if focus is already where we want to go, we don't want to keep going through the candidates\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: 'nearest' });\n          // viewport might have padding so scroll to its edges when focusing first/last items.\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n\n    // Since this is not dependent on layout, we want to ensure this runs at the same time as\n    // other effects across components. Hence why we don't call `focusSelectedItem` inside `position`.\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n\n    // prevent selecting items on `pointerup` in some cases after opening from `pointerdown`\n    // and close on `pointerup` outside.\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n\n        const handlePointerMove = (event: PointerEvent) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0)),\n          };\n        };\n        const handlePointerUp = (event: PointerEvent) => {\n          // If the pointer hasn't moved by a certain threshold then we prevent selecting item on `pointerup`.\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            // otherwise, if the event was outside the content, close.\n            if (!content.contains(event.target as HTMLElement)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener('pointermove', handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener('pointermove', handlePointerMove);\n          document.addEventListener('pointerup', handlePointerUp, { capture: true, once: true });\n        }\n\n        return () => {\n          document.removeEventListener('pointermove', handlePointerMove);\n          document.removeEventListener('pointerup', handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener('blur', close);\n      window.addEventListener('resize', close);\n      return () => {\n        window.removeEventListener('blur', close);\n        window.removeEventListener('resize', close);\n      };\n    }, [onOpenChange]);\n\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        /**\n         * Imperative focus during keydown is risky so we prevent React's batching updates\n         * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n         */\n        setTimeout(() => (nextItem.ref.current as HTMLElement).focus());\n      }\n    });\n\n    const itemRefCallback = React.useCallback(\n      (node: SelectItemElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node: SelectItemTextElement | null, value: string, disabled: boolean) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== undefined && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n\n    const SelectPosition = position === 'popper' ? SelectPopperPosition : SelectItemAlignedPosition;\n\n    // Silently ignore props that are not supported by `SelectItemAlignedPosition`\n    const popperContentProps =\n      SelectPosition === SelectPopperPosition\n        ? {\n            side,\n            sideOffset,\n            align,\n            alignOffset,\n            arrowPadding,\n            collisionBoundary,\n            collisionPadding,\n            sticky,\n            hideWhenDetached,\n            avoidCollisions,\n          }\n        : {};\n\n    return (\n      <SelectContentProvider\n        scope={__scopeSelect}\n        content={content}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        itemRefCallback={itemRefCallback}\n        selectedItem={selectedItem}\n        onItemLeave={handleItemLeave}\n        itemTextRefCallback={itemTextRefCallback}\n        focusSelectedItem={focusSelectedItem}\n        selectedItemText={selectedItemText}\n        position={position}\n        isPositioned={isPositioned}\n        searchRef={searchRef}\n      >\n        <RemoveScroll as={Slot} allowPinchZoom>\n          <FocusScope\n            asChild\n            // we make sure we're not trapping once it's been closed\n            // (closed !== unmounted when animating out)\n            trapped={context.open}\n            onMountAutoFocus={(event) => {\n              // we prevent open autofocus because we manually focus the selected item\n              event.preventDefault();\n            }}\n            onUnmountAutoFocus={composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            })}\n          >\n            <DismissableLayer\n              asChild\n              disableOutsidePointerEvents\n              onEscapeKeyDown={onEscapeKeyDown}\n              onPointerDownOutside={onPointerDownOutside}\n              // When focus is trapped, a focusout event may still happen.\n              // We make sure we don't trigger our `onDismiss` in such case.\n              onFocusOutside={(event) => event.preventDefault()}\n              onDismiss={() => context.onOpenChange(false)}\n            >\n              <SelectPosition\n                role=\"listbox\"\n                id={context.contentId}\n                data-state={context.open ? 'open' : 'closed'}\n                dir={context.dir}\n                onContextMenu={(event) => event.preventDefault()}\n                {...contentProps}\n                {...popperContentProps}\n                onPlaced={() => setIsPositioned(true)}\n                ref={composedRefs}\n                style={{\n                  // flex layout so we can place the scroll buttons properly\n                  display: 'flex',\n                  flexDirection: 'column',\n                  // reset the outline by default as the content MAY get focused\n                  outline: 'none',\n                  ...contentProps.style,\n                }}\n                onKeyDown={composeEventHandlers(contentProps.onKeyDown, (event) => {\n                  const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n\n                  // select should not be navigated using tab key so we prevent it\n                  if (event.key === 'Tab') event.preventDefault();\n\n                  if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n\n                  if (['ArrowUp', 'ArrowDown', 'Home', 'End'].includes(event.key)) {\n                    const items = getItems().filter((item) => !item.disabled);\n                    let candidateNodes = items.map((item) => item.ref.current!);\n\n                    if (['ArrowUp', 'End'].includes(event.key)) {\n                      candidateNodes = candidateNodes.slice().reverse();\n                    }\n                    if (['ArrowUp', 'ArrowDown'].includes(event.key)) {\n                      const currentElement = event.target as SelectItemElement;\n                      const currentIndex = candidateNodes.indexOf(currentElement);\n                      candidateNodes = candidateNodes.slice(currentIndex + 1);\n                    }\n\n                    /**\n                     * Imperative focus during keydown is risky so we prevent React's batching updates\n                     * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n                     */\n                    setTimeout(() => focusFirst(candidateNodes));\n\n                    event.preventDefault();\n                  }\n                })}\n              />\n            </DismissableLayer>\n          </FocusScope>\n        </RemoveScroll>\n      </SelectContentProvider>\n    );\n  }\n);\n\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemAlignedPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_ALIGNED_POSITION_NAME = 'SelectItemAlignedPosition';\n\ntype SelectItemAlignedPositionElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemAlignedPositionProps extends PrimitiveDivProps, SelectPopperPrivateProps {}\n\nconst SelectItemAlignedPosition = React.forwardRef<\n  SelectItemAlignedPositionElement,\n  SelectItemAlignedPositionProps\n>((props: ScopedProps<SelectItemAlignedPositionProps>, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState<HTMLDivElement | null>(null);\n  const [content, setContent] = React.useState<SelectItemAlignedPositionElement | null>(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (\n      context.trigger &&\n      context.valueNode &&\n      contentWrapper &&\n      content &&\n      viewport &&\n      selectedItem &&\n      selectedItemText\n    ) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n\n      // -----------------------------------------------------------------------------------------\n      //  Horizontal positioning\n      // -----------------------------------------------------------------------------------------\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n\n      if (context.dir !== 'rtl') {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [CONTENT_MARGIN, rightEdge - contentWidth]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.left = clampedLeft + 'px';\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [CONTENT_MARGIN, leftEdge - contentWidth]);\n\n        contentWrapper.style.minWidth = minContentWidth + 'px';\n        contentWrapper.style.right = clampedRight + 'px';\n      }\n\n      // -----------------------------------------------------------------------------------------\n      // Vertical positioning\n      // -----------------------------------------------------------------------------------------\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth; // prettier-ignore\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = 0 + 'px';\n        const viewportOffsetBottom =\n          content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight +\n            // viewport might have padding bottom, include it to avoid a scrollable viewport\n            (isLastItem ? viewportPaddingBottom : 0) +\n            viewportOffsetBottom +\n            contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + 'px';\n      } else {\n        const isFirstItem = selectedItem === items[0].ref.current;\n        contentWrapper.style.top = 0 + 'px';\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth +\n            viewport.offsetTop +\n            // viewport might have padding top, include it to avoid a scrollable viewport\n            (isFirstItem ? viewportPaddingTop : 0) +\n            selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + 'px';\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + 'px';\n      contentWrapper.style.maxHeight = availableHeight + 'px';\n      // -----------------------------------------------------------------------------------------\n\n      onPlaced?.();\n\n      // we don't want the initial scroll position adjustment to trigger \"expand on scroll\"\n      // so we explicitly turn it on only after they've registered.\n      requestAnimationFrame(() => (shouldExpandOnScrollRef.current = true));\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced,\n  ]);\n\n  useLayoutEffect(() => position(), [position]);\n\n  // copy z-index from content to wrapper\n  const [contentZIndex, setContentZIndex] = React.useState<string>();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n\n  // When the viewport becomes scrollable at the top, the scroll up button will mount.\n  // Because it is part of the normal flow, it will push down the viewport, thus throwing our\n  // trigger => selectedItem alignment off by the amount the viewport was pushed down.\n  // We wait for this to happen and then re-run the positining logic one more time to account for it.\n  const handleScrollButtonChange = React.useCallback(\n    (node: SelectScrollButtonImplElement | null) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n\n  return (\n    <SelectViewportProvider\n      scope={__scopeSelect}\n      contentWrapper={contentWrapper}\n      shouldExpandOnScrollRef={shouldExpandOnScrollRef}\n      onScrollButtonChange={handleScrollButtonChange}\n    >\n      <div\n        ref={setContentWrapper}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          zIndex: contentZIndex,\n        }}\n      >\n        <Primitive.div\n          {...popperProps}\n          ref={composedRefs}\n          style={{\n            // When we get the height of the content, it includes borders. If we were to set\n            // the height without having `boxSizing: 'border-box'` it would be too big.\n            boxSizing: 'border-box',\n            // We need to ensure the content doesn't get taller than the wrapper\n            maxHeight: '100%',\n            ...popperProps.style,\n          }}\n        />\n      </div>\n    </SelectViewportProvider>\n  );\n});\n\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectPopperPosition\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_POSITION_NAME = 'SelectPopperPosition';\n\ntype SelectPopperPositionElement = React.ElementRef<typeof PopperPrimitive.Content>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface SelectPopperPositionProps extends PopperContentProps, SelectPopperPrivateProps {}\n\nconst SelectPopperPosition = React.forwardRef<\n  SelectPopperPositionElement,\n  SelectPopperPositionProps\n>((props: ScopedProps<SelectPopperPositionProps>, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = 'start',\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n\n  return (\n    <PopperPrimitive.Content\n      {...popperScope}\n      {...popperProps}\n      ref={forwardedRef}\n      align={align}\n      collisionPadding={collisionPadding}\n      style={{\n        // Ensure border-box for floating-ui calculations\n        boxSizing: 'border-box',\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          '--radix-select-content-transform-origin': 'var(--radix-popper-transform-origin)',\n          '--radix-select-content-available-width': 'var(--radix-popper-available-width)',\n          '--radix-select-content-available-height': 'var(--radix-popper-available-height)',\n          '--radix-select-trigger-width': 'var(--radix-popper-anchor-width)',\n          '--radix-select-trigger-height': 'var(--radix-popper-anchor-height)',\n        },\n      }}\n    />\n  );\n});\n\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectViewport\n * -----------------------------------------------------------------------------------------------*/\n\ntype SelectViewportContextValue = {\n  contentWrapper?: HTMLDivElement | null;\n  shouldExpandOnScrollRef?: React.RefObject<boolean>;\n  onScrollButtonChange?: (node: SelectScrollButtonImplElement | null) => void;\n};\n\nconst [SelectViewportProvider, useSelectViewportContext] =\n  createSelectContext<SelectViewportContextValue>(CONTENT_NAME, {});\n\nconst VIEWPORT_NAME = 'SelectViewport';\n\ntype SelectViewportElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SelectViewportProps extends PrimitiveDivProps {}\n\nconst SelectViewport = React.forwardRef<SelectViewportElement, SelectViewportProps>(\n  (props: ScopedProps<SelectViewportProps>, forwardedRef) => {\n    const { __scopeSelect, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n        />\n        <Collection.Slot scope={__scopeSelect}>\n          <Primitive.div\n            data-radix-select-viewport=\"\"\n            role=\"presentation\"\n            {...viewportProps}\n            ref={composedRefs}\n            style={{\n              // we use position: 'relative' here on the `viewport` so that when we call\n              // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n              // (independent of the scrollUpButton).\n              position: 'relative',\n              flex: 1,\n              overflow: 'auto',\n              ...viewportProps.style,\n            }}\n            onScroll={composeEventHandlers(viewportProps.onScroll, (event) => {\n              const viewport = event.currentTarget;\n              const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n              if (shouldExpandOnScrollRef?.current && contentWrapper) {\n                const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n                if (scrolledBy > 0) {\n                  const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                  const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                  const cssHeight = parseFloat(contentWrapper.style.height);\n                  const prevHeight = Math.max(cssMinHeight, cssHeight);\n\n                  if (prevHeight < availableHeight) {\n                    const nextHeight = prevHeight + scrolledBy;\n                    const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                    const heightDiff = nextHeight - clampedNextHeight;\n\n                    contentWrapper.style.height = clampedNextHeight + 'px';\n                    if (contentWrapper.style.bottom === '0px') {\n                      viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                      // ensure the content stays pinned to the bottom\n                      contentWrapper.style.justifyContent = 'flex-end';\n                    }\n                  }\n                }\n              }\n              prevScrollTopRef.current = viewport.scrollTop;\n            })}\n          />\n        </Collection.Slot>\n      </>\n    );\n  }\n);\n\nSelectViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectGroup\n * -----------------------------------------------------------------------------------------------*/\n\nconst GROUP_NAME = 'SelectGroup';\n\ntype SelectGroupContextValue = { id: string };\n\nconst [SelectGroupContextProvider, useSelectGroupContext] =\n  createSelectContext<SelectGroupContextValue>(GROUP_NAME);\n\ntype SelectGroupElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectGroupProps extends PrimitiveDivProps {}\n\nconst SelectGroup = React.forwardRef<SelectGroupElement, SelectGroupProps>(\n  (props: ScopedProps<SelectGroupProps>, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return (\n      <SelectGroupContextProvider scope={__scopeSelect} id={groupId}>\n        <Primitive.div role=\"group\" aria-labelledby={groupId} {...groupProps} ref={forwardedRef} />\n      </SelectGroupContextProvider>\n    );\n  }\n);\n\nSelectGroup.displayName = GROUP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectLabel\n * -----------------------------------------------------------------------------------------------*/\n\nconst LABEL_NAME = 'SelectLabel';\n\ntype SelectLabelElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectLabelProps extends PrimitiveDivProps {}\n\nconst SelectLabel = React.forwardRef<SelectLabelElement, SelectLabelProps>(\n  (props: ScopedProps<SelectLabelProps>, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return <Primitive.div id={groupContext.id} {...labelProps} ref={forwardedRef} />;\n  }\n);\n\nSelectLabel.displayName = LABEL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItem\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_NAME = 'SelectItem';\n\ntype SelectItemContextValue = {\n  value: string;\n  disabled: boolean;\n  textId: string;\n  isSelected: boolean;\n  onItemTextChange(node: SelectItemTextElement | null): void;\n};\n\nconst [SelectItemContextProvider, useSelectItemContext] =\n  createSelectContext<SelectItemContextValue>(ITEM_NAME);\n\ntype SelectItemElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectItemProps extends PrimitiveDivProps {\n  value: string;\n  disabled?: boolean;\n  textValue?: string;\n}\n\nconst SelectItem = React.forwardRef<SelectItemElement, SelectItemProps>(\n  (props: ScopedProps<SelectItemProps>, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? '');\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) =>\n      contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n\n    return (\n      <SelectItemContextProvider\n        scope={__scopeSelect}\n        value={value}\n        disabled={disabled}\n        textId={textId}\n        isSelected={isSelected}\n        onItemTextChange={React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? '').trim());\n        }, [])}\n      >\n        <Collection.ItemSlot\n          scope={__scopeSelect}\n          value={value}\n          disabled={disabled}\n          textValue={textValue}\n        >\n          <Primitive.div\n            role=\"option\"\n            aria-labelledby={textId}\n            data-highlighted={isFocused ? '' : undefined}\n            // `isFocused` caveat fixes stuttering in VoiceOver\n            aria-selected={isSelected && isFocused}\n            data-state={isSelected ? 'checked' : 'unchecked'}\n            aria-disabled={disabled || undefined}\n            data-disabled={disabled ? '' : undefined}\n            tabIndex={disabled ? undefined : -1}\n            {...itemProps}\n            ref={composedRefs}\n            onFocus={composeEventHandlers(itemProps.onFocus, () => setIsFocused(true))}\n            onBlur={composeEventHandlers(itemProps.onBlur, () => setIsFocused(false))}\n            onPointerUp={composeEventHandlers(itemProps.onPointerUp, handleSelect)}\n            onPointerMove={composeEventHandlers(itemProps.onPointerMove, (event) => {\n              if (disabled) {\n                contentContext.onItemLeave?.();\n              } else {\n                // even though safari doesn't support this option, it's acceptable\n                // as it only means it might scroll a few pixels when using the pointer.\n                event.currentTarget.focus({ preventScroll: true });\n              }\n            })}\n            onPointerLeave={composeEventHandlers(itemProps.onPointerLeave, (event) => {\n              if (event.currentTarget === document.activeElement) {\n                contentContext.onItemLeave?.();\n              }\n            })}\n            onKeyDown={composeEventHandlers(itemProps.onKeyDown, (event) => {\n              const isTypingAhead = contentContext.searchRef?.current !== '';\n              if (isTypingAhead && event.key === ' ') return;\n              if (SELECTION_KEYS.includes(event.key)) handleSelect();\n              // prevent page scroll if using the space key to select an item\n              if (event.key === ' ') event.preventDefault();\n            })}\n          />\n        </Collection.ItemSlot>\n      </SelectItemContextProvider>\n    );\n  }\n);\n\nSelectItem.displayName = ITEM_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemText\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_TEXT_NAME = 'SelectItemText';\n\ntype SelectItemTextElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemTextProps extends PrimitiveSpanProps {}\n\nconst SelectItemText = React.forwardRef<SelectItemTextElement, SelectItemTextProps>(\n  (props: ScopedProps<SelectItemTextProps>, forwardedRef) => {\n    // We ignore `className` and `style` as this part shouldn't be styled.\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState<SelectItemTextElement | null>(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => (\n        <option key={itemContext.value} value={itemContext.value} disabled={itemContext.disabled}>\n          {textContent}\n        </option>\n      ),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n\n    return (\n      <>\n        <Primitive.span id={itemContext.textId} {...itemTextProps} ref={composedRefs} />\n\n        {/* Portal the select item text into the trigger value node */}\n        {itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren\n          ? ReactDOM.createPortal(itemTextProps.children, context.valueNode)\n          : null}\n      </>\n    );\n  }\n);\n\nSelectItemText.displayName = ITEM_TEXT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectItemIndicator\n * -----------------------------------------------------------------------------------------------*/\n\nconst ITEM_INDICATOR_NAME = 'SelectItemIndicator';\n\ntype SelectItemIndicatorElement = React.ElementRef<typeof Primitive.span>;\ninterface SelectItemIndicatorProps extends PrimitiveSpanProps {}\n\nconst SelectItemIndicator = React.forwardRef<SelectItemIndicatorElement, SelectItemIndicatorProps>(\n  (props: ScopedProps<SelectItemIndicatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? (\n      <Primitive.span aria-hidden {...itemIndicatorProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollUpButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_UP_BUTTON_NAME = 'SelectScrollUpButton';\n\ntype SelectScrollUpButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollUpButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollUpButton = React.forwardRef<\n  SelectScrollUpButtonElement,\n  SelectScrollUpButtonProps\n>((props: ScopedProps<SelectScrollUpButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const canScrollUp = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollUp ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectScrollDownButton\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_DOWN_BUTTON_NAME = 'SelectScrollDownButton';\n\ntype SelectScrollDownButtonElement = SelectScrollButtonImplElement;\ninterface SelectScrollDownButtonProps extends Omit<SelectScrollButtonImplProps, 'onAutoScroll'> {}\n\nconst SelectScrollDownButton = React.forwardRef<\n  SelectScrollDownButtonElement,\n  SelectScrollDownButtonProps\n>((props: ScopedProps<SelectScrollDownButtonProps>, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      const viewport = contentContext.viewport;\n      function handleScroll() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        // we use Math.ceil here because if the UI is zoomed-in\n        // `scrollTop` is not always reported as an integer\n        const canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown);\n      }\n      handleScroll();\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n\n  return canScrollDown ? (\n    <SelectScrollButtonImpl\n      {...props}\n      ref={composedRefs}\n      onAutoScroll={() => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }}\n    />\n  ) : null;\n});\n\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\n\ntype SelectScrollButtonImplElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectScrollButtonImplProps extends PrimitiveDivProps {\n  onAutoScroll(): void;\n}\n\nconst SelectScrollButtonImpl = React.forwardRef<\n  SelectScrollButtonImplElement,\n  SelectScrollButtonImplProps\n>((props: ScopedProps<SelectScrollButtonImplProps>, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext('SelectScrollButton', __scopeSelect);\n  const autoScrollTimerRef = React.useRef<number | null>(null);\n  const getItems = useCollection(__scopeSelect);\n\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n\n  // When the viewport becomes scrollable on either side, the relevant scroll button will mount.\n  // Because it is part of the normal flow, it will push down (top button) or shrink (bottom button)\n  // the viewport, potentially causing the active item to now be partially out of view.\n  // We re-run the `scrollIntoView` logic to make sure it stays within the viewport.\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: 'nearest' });\n  }, [getItems]);\n\n  return (\n    <Primitive.div\n      aria-hidden\n      {...scrollIndicatorProps}\n      ref={forwardedRef}\n      style={{ flexShrink: 0, ...scrollIndicatorProps.style }}\n      onPointerDown={composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerMove={composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      })}\n      onPointerLeave={composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })}\n    />\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * SelectSeparator\n * -----------------------------------------------------------------------------------------------*/\n\nconst SEPARATOR_NAME = 'SelectSeparator';\n\ntype SelectSeparatorElement = React.ElementRef<typeof Primitive.div>;\ninterface SelectSeparatorProps extends PrimitiveDivProps {}\n\nconst SelectSeparator = React.forwardRef<SelectSeparatorElement, SelectSeparatorProps>(\n  (props: ScopedProps<SelectSeparatorProps>, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return <Primitive.div aria-hidden {...separatorProps} ref={forwardedRef} />;\n  }\n);\n\nSelectSeparator.displayName = SEPARATOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * SelectArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'SelectArrow';\n\ntype SelectArrowElement = React.ElementRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = Radix.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface SelectArrowProps extends PopperArrowProps {}\n\nconst SelectArrow = React.forwardRef<SelectArrowElement, SelectArrowProps>(\n  (props: ScopedProps<SelectArrowProps>, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === 'popper' ? (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nSelectArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst BubbleSelect = React.forwardRef<HTMLSelectElement, React.ComponentPropsWithoutRef<'select'>>(\n  (props, forwardedRef) => {\n    const { value, ...selectProps } = props;\n    const ref = React.useRef<HTMLSelectElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n\n    // Bubble value change to parents (e.g form change event)\n    React.useEffect(() => {\n      const select = ref.current!;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        'value'\n      ) as PropertyDescriptor;\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event('change', { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n\n    /**\n     * We purposefully use a `select` here to support form autofill as much\n     * as possible.\n     *\n     * We purposefully do not add the `value` attribute here to allow the value\n     * to be set programatically and bubble to any parent form `onChange` event.\n     * Adding the `value` will cause React to consider the programatic\n     * dispatch a duplicate and it will get swallowed.\n     *\n     * We use `VisuallyHidden` rather than `display: \"none\"` because Safari autofill\n     * won't work otherwise.\n     */\n    return (\n      <VisuallyHidden asChild>\n        <select {...selectProps} ref={composedRefs} defaultValue={value} />\n      </VisuallyHidden>\n    );\n  }\n);\n\nBubbleSelect.displayName = 'BubbleSelect';\n\nfunction useTypeaheadSearch(onSearchChange: (search: string) => void) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef('');\n  const timerRef = React.useRef(0);\n\n  const handleTypeaheadSearch = React.useCallback(\n    (key: string) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n\n      (function updateSearch(value: string) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        // Reset `searchRef` 1 second after it was last updated\n        if (value !== '') timerRef.current = window.setTimeout(() => updateSearch(''), 1000);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = '';\n    window.clearTimeout(timerRef.current);\n  }, []);\n\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n\n  return [searchRef, handleTypeaheadSearch, resetTypeahead] as const;\n}\n\n/**\n * This is the \"meat\" of the typeahead matching logic. It takes in a list of items,\n * the search and the current item, and returns the next item (or `undefined`).\n *\n * We normalize the search because if a user has repeatedly pressed a character,\n * we want the exact same behavior as if we only had that one character\n * (ie. cycle through items starting with that character)\n *\n * We also reorder the items by wrapping the array around the current item.\n * This is so we always look forward from the current item, and picking the first\n * item will always be the correct one.\n *\n * Finally, if the normalized search is exactly one character, we exclude the\n * current item from the values because otherwise it would be the first to match always\n * and focus would never move. This is as opposed to the regular case, where we\n * don't want focus to move if the current item still matches.\n */\nfunction findNextItem<T extends { textValue: string }>(\n  items: T[],\n  search: string,\n  currentItem?: T\n) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find((item) =>\n    item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : undefined;\n}\n\n/**\n * Wraps an array around itself at a given start index\n * Example: `wrapArray(['a', 'b', 'c', 'd'], 2) === ['c', 'd', 'a', 'b']`\n */\nfunction wrapArray<T>(array: T[], startIndex: number) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\n\nconst Root = Select;\nconst Trigger = SelectTrigger;\nconst Value = SelectValue;\nconst Icon = SelectIcon;\nconst Portal = SelectPortal;\nconst Content = SelectContent;\nconst Viewport = SelectViewport;\nconst Group = SelectGroup;\nconst Label = SelectLabel;\nconst Item = SelectItem;\nconst ItemText = SelectItemText;\nconst ItemIndicator = SelectItemIndicator;\nconst ScrollUpButton = SelectScrollUpButton;\nconst ScrollDownButton = SelectScrollDownButton;\nconst Separator = SelectSeparator;\nconst Arrow = SelectArrow;\n\nexport {\n  createSelectScope,\n  //\n  Select,\n  SelectTrigger,\n  SelectValue,\n  SelectIcon,\n  SelectPortal,\n  SelectContent,\n  SelectViewport,\n  SelectGroup,\n  SelectLabel,\n  SelectItem,\n  SelectItemText,\n  SelectItemIndicator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n  SelectSeparator,\n  SelectArrow,\n  //\n  Root,\n  Trigger,\n  Value,\n  Icon,\n  Portal,\n  Content,\n  Viewport,\n  Group,\n  Label,\n  Item,\n  ItemText,\n  ItemIndicator,\n  ScrollUpButton,\n  ScrollDownButton,\n  Separator,\n  Arrow,\n};\nexport type {\n  SelectProps,\n  SelectTriggerProps,\n  SelectValueProps,\n  SelectIconProps,\n  SelectPortalProps,\n  SelectContentProps,\n  SelectViewportProps,\n  SelectGroupProps,\n  SelectLabelProps,\n  SelectItemProps,\n  SelectItemTextProps,\n  SelectItemIndicatorProps,\n  SelectScrollUpButtonProps,\n  SelectScrollDownButtonProps,\n  SelectSeparatorProps,\n  SelectArrowProps,\n};\n"],"names":["OPEN_KEYS","SELECTION_KEYS","SELECT_NAME","Collection","useCollection","createCollectionScope","createCollection","createSelectContext","createSelectScope","createContextScope","createPopperScope","usePopperScope","SelectProvider","useSelectContext","SelectNativeOptionsProvider","useSelectNativeOptionsContext","Select","props","__scopeSelect","children","open","openProp","defaultOpen","onOpenChange","value","valueProp","defaultValue","onValueChange","dir","name","autoComplete","disabled","required","popperScope","trigger","setTrigger","React","valueNode","setValueNode","valueNodeHasChildren","setValueNodeHasChildren","direction","useDirection","setOpen","useControllableState","prop","defaultProp","onChange","setValue","triggerPointerDownPosRef","isFormControl","Boolean","closest","nativeOptionsSet","setNativeOptionsSet","Set","nativeSelectKey","Array","from","map","option","join","useId","prev","add","optionsSet","delete","event","target","undefined","TRIGGER_NAME","SelectTrigger","forwardedRef","triggerProps","context","isDisabled","composedRefs","useComposedRefs","onTriggerChange","getItems","searchRef","handleTypeaheadSearch","resetTypeahead","useTypeaheadSearch","search","enabledItems","filter","item","currentItem","find","nextItem","findNextItem","handleOpen","contentId","composeEventHandlers","onClick","currentTarget","focus","onPointerDown","hasPointerCapture","pointerId","releasePointerCapture","button","ctrlKey","current","x","Math","round","pageX","y","pageY","preventDefault","onKeyDown","isTypingAhead","isModifierKey","altKey","metaKey","key","length","includes","VALUE_NAME","SelectValue","className","style","placeholder","valueProps","onValueNodeHasChildrenChange","hasChildren","onValueNodeChange","useLayoutEffect","pointerEvents","ICON_NAME","SelectIcon","iconProps","PORTAL_NAME","SelectPortal","CONTENT_NAME","SelectContent","fragment","setFragment","DocumentFragment","frag","ReactDOM","CONTENT_MARGIN","SelectContentProvider","useSelectContentContext","CONTENT_IMPL_NAME","SelectContentImpl","position","onCloseAutoFocus","onEscapeKeyDown","onPointerDownOutside","side","sideOffset","align","alignOffset","arrowPadding","collisionBoundary","collisionPadding","sticky","hideWhenDetached","avoidCollisions","contentProps","content","setContent","viewport","setViewport","node","selectedItem","setSelectedItem","selectedItemText","setSelectedItemText","isPositioned","setIsPositioned","firstValidItemFoundRef","hideOthers","useFocusGuards","focusFirst","candidates","firstItem","restItems","ref","lastItem","slice","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","scrollIntoView","block","scrollTop","scrollHeight","focusSelectedItem","pointerMoveDelta","handlePointerMove","abs","handlePointerUp","contains","removeEventListener","addEventListener","capture","once","close","window","setTimeout","itemRefCallback","isFirstValidItem","isSelectedItem","handleItemLeave","itemTextRefCallback","SelectPosition","SelectPopperPosition","SelectItemAlignedPosition","popperContentProps","Slot","preventScroll","display","flexDirection","outline","items","candidateNodes","reverse","currentElement","currentIndex","indexOf","ITEM_ALIGNED_POSITION_NAME","onPlaced","popperProps","contentContext","contentWrapper","setContentWrapper","shouldExpandOnScrollRef","shouldRepositionRef","triggerRect","getBoundingClientRect","contentRect","valueNodeRect","itemTextRect","itemTextOffset","left","leftDelta","minContentWidth","width","contentWidth","max","rightEdge","innerWidth","clampedLeft","clamp","minWidth","right","rightDelta","leftEdge","clampedRight","availableHeight","innerHeight","itemsHeight","contentStyles","getComputedStyle","contentBorderTopWidth","parseInt","borderTopWidth","contentPaddingTop","paddingTop","contentBorderBottomWidth","borderBottomWidth","contentPaddingBottom","paddingBottom","fullContentHeight","minContentHeight","min","offsetHeight","viewportStyles","viewportPaddingTop","viewportPaddingBottom","topEdgeToTriggerMiddle","top","height","triggerMiddleToBottomEdge","selectedItemHalfHeight","itemOffsetMiddle","offsetTop","contentTopToItemMiddle","itemMiddleToContentBottom","willAlignWithoutTopOverflow","isLastItem","bottom","viewportOffsetBottom","clientHeight","clampedTriggerMiddleToBottomEdge","isFirstItem","clampedTopEdgeToTriggerMiddle","margin","minHeight","maxHeight","requestAnimationFrame","contentZIndex","setContentZIndex","zIndex","handleScrollButtonChange","boxSizing","POPPER_POSITION_NAME","SelectViewportProvider","useSelectViewportContext","VIEWPORT_NAME","SelectViewport","viewportProps","viewportContext","onViewportChange","prevScrollTopRef","__html","flex","overflow","onScroll","scrolledBy","cssMinHeight","parseFloat","cssHeight","prevHeight","nextHeight","clampedNextHeight","heightDiff","justifyContent","GROUP_NAME","SelectGroupContextProvider","useSelectGroupContext","SelectGroup","groupProps","groupId","LABEL_NAME","SelectLabel","labelProps","groupContext","id","ITEM_NAME","SelectItemContextProvider","useSelectItemContext","SelectItem","textValue","textValueProp","itemProps","isSelected","setTextValue","isFocused","setIsFocused","textId","handleSelect","prevTextValue","textContent","trim","onFocus","onBlur","onPointerUp","onPointerMove","onItemLeave","onPointerLeave","ITEM_TEXT_NAME","SelectItemText","itemTextProps","itemContext","nativeOptionsContext","itemTextNode","setItemTextNode","onItemTextChange","nativeOption","onNativeOptionAdd","onNativeOptionRemove","ITEM_INDICATOR_NAME","SelectItemIndicator","itemIndicatorProps","SCROLL_UP_BUTTON_NAME","SelectScrollUpButton","canScrollUp","setCanScrollUp","onScrollButtonChange","handleScroll","SCROLL_DOWN_BUTTON_NAME","SelectScrollDownButton","canScrollDown","setCanScrollDown","maxScroll","ceil","SelectScrollButtonImpl","onAutoScroll","scrollIndicatorProps","autoScrollTimerRef","clearAutoScrollTimer","clearInterval","activeItem","flexShrink","setInterval","SEPARATOR_NAME","SelectSeparator","separatorProps","ARROW_NAME","SelectArrow","arrowProps","BubbleSelect","selectProps","prevValue","usePrevious","select","selectProto","HTMLSelectElement","prototype","descriptor","Object","getOwnPropertyDescriptor","set","Event","bubbles","call","dispatchEvent","displayName","onSearchChange","handleSearchChange","useCallbackRef","timerRef","updateSearch","clearTimeout","isRepeated","every","char","normalizedSearch","currentItemIndex","wrappedItems","wrapArray","excludeCurrentItem","v","toLowerCase","startsWith","array","startIndex","_","index","Root","Trigger","Value","Icon","Portal","Content","Viewport","Group","Label","Item","ItemText","ItemIndicator","ScrollUpButton","ScrollDownButton","Separator","Arrow"],"mappings":"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"}},
    {"offset": {"line": 1262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}